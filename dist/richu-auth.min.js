"use strict";angular.module("richu.auth",["richu.auth.config","ngResource","ui.router","toastr","LocalStorageModule"]).config(function(a,b){a.setPrefix(b||"")}).constant("USER_ROLES",function(){var a="01",b={};for(var c in authConfig.roles){var d=parseInt(a,2);b[authConfig.roles[c]]={bitMask:d,title:authConfig.roles[c]},a=(d<<1).toString(2)}return b}()).constant("ACCESS_LEVELS",function(){function a(a){var b,d={},e="";for(var f in a)if("string"==typeof a[f])if("*"===a[f]){e="";for(b in c)e+="1";d[f]={bitMask:parseInt(e,2)}}else console.error("Access Control Error: Could not parse '"+a[f]+"' as access definition for level '"+f+"'");else{e=0;for(b in a[f])c.hasOwnProperty(a[f][b])?e|=c[a[f][b]].bitMask:console.error("Access Control Error: Could not find role '"+a[f][b]+"' in registered roles while building access for '"+f+"'");d[f]={bitMask:e}}return d}var b="01",c={};for(var d in authConfig.roles){var e=parseInt(b,2);c[authConfig.roles[d]]={bitMask:e,title:authConfig.roles[d]},b=(e<<1).toString(2)}return a(authConfig.accessLevels)}()),angular.module("richu.auth").directive("accessLevel",function(a,b,c){return{restrict:"A",link:function(d,e,f){function g(){i&&h&&(0===b.authorize(h,i)?e.css("display","none"):e.css("display",j))}var h,i,j=e.css("display");a.currentUser&&a.currentUser.hasOwnProperty("role")&&(i=a.currentUser.role),a.$on("USER_CHANGED",function(a,b){b.role&&(i=b.role),g()}),f.$observe("accessLevel",function(a){a&&(h=c[a]),g()})}}}),angular.module("richu.auth").directive("showUser",function(){return{restrict:"AE",template:"{{username}}",controller:function(a,b){a.username=b.currentUser.name,b.$on("USER_CHANGED",function(b,c){a.username=c.name})}}}),angular.module("richu.auth").provider("Auth",function(){var a=this;return{$get:function(b){function c(){var a={role:h["public"]};g.changeUser(a),e.currentUser=a,e.$broadcast("USER_CHANGED",e.currentUser)}function d(a){angular.extend(e.currentUser,a),g.changeUser(e.currentUser),e.$broadcast("USER_CHANGED",e.currentUser)}var e=b.get("$rootScope"),f=b.get("$resource"),g=b.get("AuthPersistance"),h=b.get("USER_ROLES"),i=b.get("AUTH_BASE_URL"),j=b.get("AUTH_SERVER_CONFIG"),k=f(i+":auth/:provider/:action/:actionId",{action:"@action",actionId:"@actionId"},j);e.currentUser={};var l=function(){a.dbUser=g.user(),void 0===a.dbUser||_.isEmpty(a.dbUser)?c():e.currentUser=a.dbUser};return l(),{permissionChanged:function(a){d(a)},updateUser:function(a){var b=a;delete a.passports,delete a.profiles,delete a.registrations,delete a.role,delete a.mask,delete a.username,delete a.email,delete a.createdAt,d(b)},authorize:function(a,b){return void 0===b&&(b=e.currentUser.role),a.bitMask&b.bitMask},isLoggedIn:function(a){return void 0===a&&(void 0===e.currentUser&&l(),a=e.currentUser),a.role.title!==h["public"].title},findpassword:function(a,b,c){k.findpassword({email:a},function(a){b(a)},function(a){c(a)})},resetpassword:function(a,b,c){k.resetpassword({password:a},function(a){b(a)},function(a){c(a)})},checkUser:function(a,b,c){k.checkUser(a,function(a){b(a)},function(a){c(a)})},register:function(a,b,c){k.register(a,function(a){b(a)},function(a){c(a)})},loginByToken:function(a,b,e){k.loginByToken(a,function(a){var c=JSON.parse(angular.toJson(a)),e={role:{title:c.role,bitMask:parseInt(c.mask,10)}};delete c.mask,delete c.role,angular.extend(e,c),d(e),b(e)},function(a){g.clearAll(),c(),e(a)})},login:function(a,b,e){k.login(a,function(a){var c=JSON.parse(angular.toJson(a)),e={role:{title:c.role,bitMask:parseInt(c.mask,10)}};delete c.mask,delete c.role,angular.extend(e,c),d(e),b(e)},function(a){g.clearAll(),c(),e(a)})},logout:function(a){g.clearAll(),c(),a(e.currentUser)}}}}}),angular.module("richu.auth").factory("AuthPersistance",function(a,b){var c={role:b["public"]};return{clearAll:function(){a.clearAll(),a.set("user",c)},user:function(){return a.get("user")},changeUser:function(b){a.set("user",b)}}});